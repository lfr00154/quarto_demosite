{
  "hash": "12611fc6d3614d543585095f3fb2a7e2",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Quarto\"\nauthor: \"Lifeng Ren\"\ndate: \"09/13/2023\"\nformat: \n    html: \n        toc: true\n        number-sections: true\n    pdf:\n        toc: true\n        number-sections: true\n        colorlinks: true\nexecute:\n  freeze: auto  # re-render only when source changes\n---\n\n\n# Overview\n\n-   Today, I am going to go over a software called `Quarto` that is developed by the same team that developed `R Markdown`. As you can guess for now, they are very similar with slight difference.\n-   In this session, I am hoping to go over:\n    -   What is `Quarto`, and why we should use it\n    -   How to use `Quarto` to generate:\n        -   `HTML` documents\n        -   `Reveal.js` slides\n        -   Quarto website with `GitHub Pages`\n\n## What is Quarto\n\n-   Quarto is an open-source scientific and technical publishing system to create dynamic content with `Python`, `R`, `Stata`, `Julia` with engines `Jupyter`, `Knitr`, and `Observable`.\n\n-   Just like `R Markdown`, `Quarto` uses `PanDoc` to convert `Markdown` to `LaTex`, `HTML`, `PDF`, `Word`, etc.\n\n-   In short: One document (`.qmd`), multiple languages, multiple outputs.\n\n## Why Quarto?\n\n-   To keep your code and document in one place and make it reproducible. Most importantly, to make it open-sourced and shareable.\n\n-   What if I am already using `R Markdown`, do I need to switch?\n\n    -   Based on your needs. There are many discussions on this, and I am providing some blogs and articles that you can read to make your own decision.\n        -   [With Quarto Coming, is R Markdown Going Away? No.](https://yihui.org/en/2022/04/quarto-r-markdown/)\n        -   [Notes on Changing from Rmarkdown/Bookdown to Quarto](https://www.njtierney.com/post/2022/04/11/rmd-to-qmd/)\n\n## Install Quarto\n\nTo play with `Quarto`, you should firstly download Quarto from [here](https://quarto.org/docs/get-started/), install it, and choose your favorite IDE to write `Quarto` documents. I am using `VS Code` with `Quarto` extension installed to show the demo today.\n\n-   If you are using `R Studio`, once you installed `Quarto`, you do not need any extra steps. Just restart your `R Studio` and you are good to go.\n\n-   In the `VS Code` IDE, you need to install `Quarto` extension in the `Extensions` marketplace.\n\n    ![](img/quarto_extension.png){width=\"50%\"}\n\n# Generate your first `Quarto` document\n\nAs I mentioned above, `Quarto` can support many output formats. Today, I am going to show you how to generate `HTML` documents, `Reveal.js` slides, and `Quarto` website with `GitHub Pages`. For a full list of reference, please visit this page: <https://quarto.org/docs/guide/>. \n\n## Quarto Notebook\n\n-   Quarto provides a `Notebook Editor` and a `Visual Editor` mode to write the document. (DEMO)\n\n    ![](img/notebook_editor.png){width=\"50%\"}\n    ![](img/visual_editor.png){width=\"50%\"}\n\n-   It can be rendered into different type of outputs. (DEMO for `HTML`, `PDF`, `Word`)\n    - For now, I will keep rendering it into `HTML` format.\n\n- Almost all syntax are the same for `R Markdown` and `Quarto` because they are based on `Markdown`. So, I won't go over the syntax a lot today. You can find more information here: <https://quarto.org/docs/authoring/markdown-basics.html>\n\n- `YAML` header has some differences. Here is an example:\n\n| RMarkdown        | Quarto   |\n|------------------|----------|\n| output: html_document | format: html |\n| output: pdf_document  | format: pdf  |\n| output: word_document | format: docx |\n| `underscore`: `_` (e.g.: `number_sections: true`)| `dash`: `-` (e.g.: `number-sections: true`)|\n|Rerender all the code| Rerender only when source changes|\n\nNew Features in `Quarto`'s `YAML` header:\n\n::: {.cell}\n\n```{.r .cell-code}\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n:::\n\n\n- Code Chunk options are changing\n\n::: {.panel-tabset}\n\n### RMarkdown\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    ```{r setup, include=FALSE}\n    ```\n```\n:::\n\n### Quarto\n\n::: {.cell}\n\n```{.r .cell-code}\n    ```{r}\n    #| label: \"setup\"\n    #| include: false\n    ```\n```\n:::\n\n:::\n\n\n## Weave `Stata`, `R`, and `Python` into one Document\n\n### Run Stata Code in Python and R\n\nSince `Quarto` can choose the corresponding language engine based on the code chunk's language, we can run `Stata` code in `Python` and `R` code chunks to weave all three languages coding into one document.\n\n::: panel-tabset\n#### Run Stata in `Python`\n\n**Step 1:** Install `pystata`, and `stata_setup` package using `pip` or `conda`, or `mamba`, etc. (Here is an example using `pip`)\n\n\n::: {.cell}\n\n```{.python .cell-code}\npip install pystata\npip install stata_setup\n```\n:::\n\n\n**Step 2:** Point the `stata_setup` to your Stata installation directory\n\n-   Open Stata, and type `display c(sysdir_stata)` in the command window.\n-   Copy the output and paste it in the `stata_setup.config()` function like below.\n\n\n::: {.cell}\n\n```{.python .cell-code  code-line-numbers=\"145\"}\nimport stata_setup\nstata_setup.config('/Applications/Stata/', 'mp')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  ___  ____  ____  ____  ____ ®\n /__    /   ____/   /   ____/      17.0\n___/   /   /___/   /   /___/       MP—Parallel Edition\n\n Statistics and Data Science       Copyright 1985-2021 StataCorp LLC\n                                   StataCorp\n                                   4905 Lakeway Drive\n                                   College Station, Texas 77845 USA\n                                   800-STATA-PC        https://www.stata.com\n                                   979-696-4600        stata@stata.com\n\nStata license: Single-user 8-core , expiring  1 Jan 2025\nSerial number: 501709301094\n  Licensed to: Lifeng Ren\n               APEC\n\nNotes:\n      1. Unicode is supported; see help unicode_advice.\n      2. More than 2 billion observations are allowed; see help obs_advice.\n      3. Maximum number of variables is set to 5,000; see help set_maxvar.\n```\n:::\n:::\n\n\n**Step 3:** Run Stata code in Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom pystata import stata\n\nstata.run('''\nsysuse auto, clear\nsummarize\nreg mpg price i.foreign\nereturn list\n''')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n. \n. sysuse auto, clear\n(1978 automobile data)\n\n. summarize\n\n    Variable |        Obs        Mean    Std. dev.       Min        Max\n-------------+---------------------------------------------------------\n        make |          0\n       price |         74    6165.257    2949.496       3291      15906\n         mpg |         74     21.2973    5.785503         12         41\n       rep78 |         69    3.405797    .9899323          1          5\n    headroom |         74    2.993243    .8459948        1.5          5\n-------------+---------------------------------------------------------\n       trunk |         74    13.75676    4.277404          5         23\n      weight |         74    3019.459    777.1936       1760       4840\n      length |         74    187.9324    22.26634        142        233\n        turn |         74    39.64865    4.399354         31         51\ndisplacement |         74    197.2973    91.83722         79        425\n-------------+---------------------------------------------------------\n  gear_ratio |         74    3.014865    .4562871       2.19       3.89\n     foreign |         74    .2972973    .4601885          0          1\n\n. reg mpg price i.foreign\n\n      Source |       SS           df       MS      Number of obs   =        74\n-------------+----------------------------------   F(2, 71)        =     23.01\n       Model |  960.866305         2  480.433152   Prob > F        =    0.0000\n    Residual |  1482.59315        71  20.8815937   R-squared       =    0.3932\n-------------+----------------------------------   Adj R-squared   =    0.3761\n       Total |  2443.45946        73  33.4720474   Root MSE        =    4.5696\n\n------------------------------------------------------------------------------\n         mpg | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n       price |   -.000959   .0001815    -5.28   0.000     -.001321    -.000597\n             |\n     foreign |\n    Foreign  |   5.245271   1.163592     4.51   0.000     2.925135    7.565407\n       _cons |   25.65058   1.271581    20.17   0.000     23.11512    28.18605\n------------------------------------------------------------------------------\n\n. ereturn list\n\nscalars:\n                  e(N) =  74\n               e(df_m) =  2\n               e(df_r) =  71\n                  e(F) =  23.00749448574634\n                 e(r2) =  .3932401256962295\n               e(rmse) =  4.569638248831391\n                e(mss) =  960.8663049714787\n                e(rss) =  1482.593154487981\n               e(r2_a) =  .3761482982510528\n                 e(ll) =  -215.9083177127538\n               e(ll_0) =  -234.3943376482347\n               e(rank) =  3\n\nmacros:\n            e(cmdline) : \"regress mpg price i.foreign\"\n              e(title) : \"Linear regression\"\n          e(marginsok) : \"XB default\"\n                e(vce) : \"ols\"\n             e(depvar) : \"mpg\"\n                e(cmd) : \"regress\"\n         e(properties) : \"b V\"\n            e(predict) : \"regres_p\"\n              e(model) : \"ols\"\n          e(estat_cmd) : \"regress_estat\"\n\nmatrices:\n                  e(b) :  1 x 4\n                  e(V) :  4 x 4\n               e(beta) :  1 x 3\n\nfunctions:\n             e(sample)   \n\n. \n```\n:::\n:::\n\n\n#### Run Stata in `R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Statamarkdown)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nStata found at /Applications/Stata/StataMP.app/Contents/MacOS/StataMP\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe 'stata' engine is ready to use.\n```\n:::\n\n```{.r .cell-code}\nstataexe <- \"/Applications/Stata/StataMP.app/Contents/MacOS/StataMP\"\nknitr::opts_chunk$set(engine.path=list(stata=stataexe))\n```\n:::\n\n::: {.cell}\n\n```{.stata .cell-code}\nsysuse auto, clear\nsummarize\nreg mpg price i.foreign\nereturn list\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n(1978 automobile data)\n\n    Variable |        Obs        Mean    Std. dev.       Min        Max\n-------------+---------------------------------------------------------\n        make |          0\n       price |         74    6165.257    2949.496       3291      15906\n         mpg |         74     21.2973    5.785503         12         41\n       rep78 |         69    3.405797    .9899323          1          5\n    headroom |         74    2.993243    .8459948        1.5          5\n-------------+---------------------------------------------------------\n       trunk |         74    13.75676    4.277404          5         23\n      weight |         74    3019.459    777.1936       1760       4840\n      length |         74    187.9324    22.26634        142        233\n        turn |         74    39.64865    4.399354         31         51\ndisplacement |         74    197.2973    91.83722         79        425\n-------------+---------------------------------------------------------\n  gear_ratio |         74    3.014865    .4562871       2.19       3.89\n     foreign |         74    .2972973    .4601885          0          1\n\n      Source |       SS           df       MS      Number of obs   =        74\n-------------+----------------------------------   F(2, 71)        =     23.01\n       Model |  960.866305         2  480.433152   Prob > F        =    0.0000\n    Residual |  1482.59315        71  20.8815937   R-squared       =    0.3932\n-------------+----------------------------------   Adj R-squared   =    0.3761\n       Total |  2443.45946        73  33.4720474   Root MSE        =    4.5696\n\n------------------------------------------------------------------------------\n         mpg | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n       price |   -.000959   .0001815    -5.28   0.000     -.001321    -.000597\n             |\n     foreign |\n    Foreign  |   5.245271   1.163592     4.51   0.000     2.925135    7.565407\n       _cons |   25.65058   1.271581    20.17   0.000     23.11512    28.18605\n------------------------------------------------------------------------------\n\n\nscalars:\n                  e(N) =  74\n               e(df_m) =  2\n               e(df_r) =  71\n                  e(F) =  23.00749448574634\n                 e(r2) =  .3932401256962295\n               e(rmse) =  4.569638248831391\n                e(mss) =  960.8663049714787\n                e(rss) =  1482.593154487981\n               e(r2_a) =  .3761482982510528\n                 e(ll) =  -215.9083177127538\n               e(ll_0) =  -234.3943376482347\n               e(rank) =  3\n\nmacros:\n            e(cmdline) : \"regress mpg price i.foreign\"\n              e(title) : \"Linear regression\"\n          e(marginsok) : \"XB default\"\n                e(vce) : \"ols\"\n             e(depvar) : \"mpg\"\n                e(cmd) : \"regress\"\n         e(properties) : \"b V\"\n            e(predict) : \"regres_p\"\n              e(model) : \"ols\"\n          e(estat_cmd) : \"regress_estat\"\n\nmatrices:\n                  e(b) :  1 x 4\n                  e(V) :  4 x 4\n               e(beta) :  1 x 3\n\nfunctions:\n             e(sample)   \n```\n:::\n:::\n\n:::\n\n# `Reveal.js` slides\n\nI normally has a document first and then copy and paste it into a new `Quarto` document to generate `Reveal.js` slides. But you can also just change a few things in the `YAML` header to generate `Reveal.js` slides.\n\nThe key thing we need to modify is the `format` in the `YAML` header. Here is an example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"Introduction to Quarto\"\nauthor: \"Lifeng Ren\"\ndate: \"09-13-2023\"\nformat: \n    revealjs: # revealjs slides\n        theme: default # default, beige, sky, night, serif, simple, solarized\n        chalkboard: true # add a chalkboard to the slides\n        scrollable: true # make the slides scrollable: this is useful for long slides (or sometimes you directly change the yaml header from the html document)\n---\n```\n:::\n\n\n## Key Features\nIn the `Revealjs` slides, a new section will be generated for a new slide. And We can use `#` \n\n- Incremental Lists\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Slide 1\n::: {.incremental}\n-   Item 1\n-   Item 2\n:::\n```\n:::\n\n\n- Multiple Columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nLeft column\n:::\n\n::: {.column width=\"60%\"}\nRight column\n:::\n\n::::\n```\n:::\n\n\n- Code Highlight\n\nSuppose we would like to highlight the following code\n\n  - `ax.plot(theta, r)`\n  - `x.grid(True)`\n\nWe could use the following code to highlight the code in a presentation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    ```{.python code-line-numbers=\"7,9\"}\n    import numpy as np\n    import matplotlib.pyplot as plt\n\n    r = np.arange(0, 2, 0.01)\n    theta = 2 * np.pi * r\n    fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\n    ax.plot(theta, r)\n    ax.set_rticks([0.5, 1, 1.5, 2])\n    x.grid(True)\n    plt.show()\n    ```\n```\n:::\n\n\n# Quarto website with `GitHub Pages`\n\n## Personal Website\n\nIn order to generate a personal website hosted by GitHub, we need to do the following things:\n\n- A github account\n\n- Create a new repository with the name of `username.github.io` (e.g.: `lfr00154.github.io`)\n  - If you already have your personal website and you can add create a repository with a different name and link this repository to your personal website. For example, I would use `quarto_demosite` as the repository name.\n\n- Create a new `Quarto` website project.\n  - In the `_quarto.yml` file, add `output-dir: docs` under the `project` section. \n  - Render this file and there shall be a local static website shown on your IDE/browser.\n\n- Go to GitHub and upload the whole project to the repository you just created.\n\n\n\n\n# Useful Resources",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}